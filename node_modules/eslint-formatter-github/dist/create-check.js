"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAnnotations = void 0;
var create_check_1 = __importDefault(require("create-check"));
var path_1 = __importDefault(require("path"));
var execa_1 = __importDefault(require("execa"));
var APP_ID = 38817;
/**
 * Before you say anything I *know* this is horribly insecure.
 *
 * If we were not to to this then every user would have to create
 * their own GitHub App and manage the APP_ID and PRIVATE_KEY through
 * env vars.
 *
 * How could this go wrong? Well this PRIVATE_KEY only creates jwt
 * tokens that work on people who have installed the ESLint Results
 * App. If an attacker got ahold of the token they could only read repo
 * metadata and read/write checks. So the attack surface is really only
 * messing with a users checks, which is not too risky.
 */
var PRIVATE_KEY = "\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA5jyJgi6Tx5lpGj4kBJrc72ZOUd0x0ZyAWphv3cuZ7mXLH+eo\n4Gg/osi/gxfu8Nznittkc155dbHsk9a2fkIfAWPGPXwloOcBLfBea+c1lp7L63Zn\nUtZuzsCKLZeNYVs6D+VKpdXQ0mPNLA2hkvsJxqaJIyRKzvNFvNPLROq72wmk1dKr\nGqJ4mF2XVixeRlV5q+xbJXy/wdQzYI1/btW7Tb55FarVevuRWwYwiZ4tBb9rhgJy\nQK+JYNjuMGM1l0b81NyrFf8zTO6oo3k2Rlc80ZQhC4LFvQmD6BcAg4psbxuBtJvv\n7pfhPkkDr6phjFR8H2GaI00DVCqK/2DOIcPGEQIDAQABAoIBABvzNW5MYTxV72B0\nMsMsWa3maZOemrGrohldcBco5GMAkIwq/2Fexnroi/dKLIOpDaLZx3QKAAy9sM6x\nvi3NsR3mEubb72V9JbOB/rRyuRqz5GWNVjXEOmd3EE9AmrU68e2EFG/VaShhXUL/\n1KGXQDSRewx9F2fQOKMXwxF2vZ91bU8QYt+4XQTNxdKIsqo9B59a892TG1+gMHqF\nXITmautX5sGpMCXXHvUn1JN+ERr5THrTs6o158i+YRZSxHZupHmWF+CCMCUv7m+n\nzG9n5XoVZFLEx3E6Mq9cUUNUksC2oSsPKWN1qxqWMi4BelqdXWlFhUiQQSpEXKrQ\npaKklBECgYEA8/5u+130YzH8StyGu/NvQbLwzDeK9aSdzCwdMhUvg4Hf3v0qanqH\n5aqDEiNJdPodla70R8yTN88kzGB0r+QjckoVby5j4qcPtYMsW8ROEjniIoJPAQu+\nsFEE7txgis0m3UFmrjJU4xsTn9G/NgQ+EJDQbFTbxagKBe6ruyx7HisCgYEA8ZDN\njPuDlhH8kI1CGrMuwAEjGMI3hMgFnpc6JaKpLx3EBUJVXxAtf8qM2EaVcJQ+GrHa\nWFc6whpzVUXVNLQygadlwUqEQVoPOi+sWhVEV/Z18F93I98wL9LSuX/ZPkLLyAw7\nKbYdMuZJs4fS9h1l1QM1+LYyHlCx/naaB+mACrMCgYEA0+An46Qs6k6ntSJW5bN4\n82Y98DhzNOhkFr5gA/OdtOb8zpitUpVgmTE+bGu0CB6Bvk+U1Rxy4s3AOLGx4mOL\n3F00y71PA6zq2UY1KOMIoI8fLbRWgqP+TQGt9PXt59pKW2vFjJMsX6JNokTzdCau\n9peqRchSqAtJ2Ojuu7TenM0CgYAr4ZMFVjcMDs5jb9WfRgdrB4nZmIY/T5p9uZjt\nd0PmdDDEh808TJMHUMMPEptY7QTvEnnIbGgXFHj494uIXGeEV+VLHH8z4+k6N6jG\nYHCezf2UobLhyExXk6OF4OyUu8uK1nX02MkrEtw2iajP3n0+Gaw3NtmZ2izLPb4z\nS75fswKBgQCeQrQzzUcC+nSd+O8z+YLsYJjEi10o4LX0uHVlxsneUJTdZ+8s238R\nrxXIyGcdFUjpY/U2tobjXousbYyz8/DqgDoLWXOMt2dNkbbNAN8L3OMVTGb6TzS2\ngd8URXIGc6Nk7ueWMKEZaropIg6q1J7e9qJdlzA6j1fu6vVY3qX3tA==\n-----END RSA PRIVATE KEY-----";
var annotationsOrder = {
    'failure': 1,
    'warning': 2,
    'notice': 3,
};
function createAnnotations(results) {
    return __awaiter(this, void 0, void 0, function () {
        var repoRoot, annotations, levels, results_1, results_1_1, result, filePath, messages, messages_1, messages_1_1, msg, line, severity, ruleId, message, annotationLevel;
        var e_1, _a, e_2, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0: return [4 /*yield*/, (0, execa_1.default)('git', ['rev-parse', '--show-toplevel'])];
                case 1:
                    repoRoot = (_c.sent()).stdout;
                    annotations = [];
                    levels = [
                        'notice',
                        'warning',
                        'failure'
                    ];
                    try {
                        for (results_1 = __values(results), results_1_1 = results_1.next(); !results_1_1.done; results_1_1 = results_1.next()) {
                            result = results_1_1.value;
                            filePath = result.filePath, messages = result.messages;
                            try {
                                for (messages_1 = (e_2 = void 0, __values(messages)), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {
                                    msg = messages_1_1.value;
                                    line = msg.line, severity = msg.severity, ruleId = msg.ruleId, message = msg.message;
                                    annotationLevel = levels[severity];
                                    annotations.push({
                                        path: path_1.default.relative(repoRoot, filePath),
                                        start_line: line,
                                        end_line: line,
                                        annotation_level: annotationLevel,
                                        message: "[".concat(ruleId, "] ").concat(message)
                                    });
                                }
                            }
                            catch (e_2_1) { e_2 = { error: e_2_1 }; }
                            finally {
                                try {
                                    if (messages_1_1 && !messages_1_1.done && (_b = messages_1.return)) _b.call(messages_1);
                                }
                                finally { if (e_2) throw e_2.error; }
                            }
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (results_1_1 && !results_1_1.done && (_a = results_1.return)) _a.call(results_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    return [2 /*return*/, annotations.sort(function (a, b) { return annotationsOrder[a.annotation_level] - annotationsOrder[b.annotation_level]; })];
            }
        });
    });
}
exports.createAnnotations = createAnnotations;
exports.default = (function (results) { return __awaiter(void 0, void 0, void 0, function () {
    var errorCount, warningCount, privateKey, _a;
    var _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                errorCount = 0;
                warningCount = 0;
                results.forEach(function (result) {
                    var messages = result.messages;
                    if (messages.length === 0) {
                        return;
                    }
                    errorCount += result.errorCount;
                    warningCount += result.warningCount;
                });
                privateKey = process.env.ESLINT_PRIVATE_KEY || PRIVATE_KEY;
                if (process.env.ESLINT_PRIVATE_KEY_BASE64) {
                    privateKey = Buffer.from(process.env.ESLINT_PRIVATE_KEY_BASE64, 'base64').toString();
                }
                _a = create_check_1.default;
                _b = {
                    tool: 'ESLint',
                    name: process.env.GH_CHECK_NAME || 'Check Code for Errors'
                };
                return [4 /*yield*/, createAnnotations(results)];
            case 1: return [2 /*return*/, _a.apply(void 0, [(_b.annotations = _c.sent(),
                        _b.errorCount = errorCount,
                        _b.warningCount = warningCount,
                        _b.appId = process.env.ESLINT_APP_ID
                            ? Number(process.env.ESLINT_APP_ID)
                            : APP_ID,
                        _b.privateKey = privateKey,
                        _b)])];
        }
    });
}); });
//# sourceMappingURL=create-check.js.map