"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
var execa_1 = __importDefault(require("execa"));
var env_ci_1 = __importDefault(require("env-ci"));
var lodash_chunk_1 = __importDefault(require("lodash.chunk"));
var await_to_js_1 = __importDefault(require("await-to-js"));
var app_1 = require("@octokit/app");
var rest_1 = require("@octokit/rest");
var _d = env_ci_1.default(), isCi = _d.isCi, env = __rest(_d, ["isCi"]);
var custom_previews = (_c = (_b = (_a = process.env) === null || _a === void 0 ? void 0 : _a.GH_PREVIEWS) === null || _b === void 0 ? void 0 : _b.split(',')) !== null && _c !== void 0 ? _c : [];
function getRepositoryParameters() {
    return __awaiter(this, void 0, void 0, function () {
        var regex, url, match, _a, _b, owner, _c, repo, _d, _e, owner, _f, repo;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    regex = /https?:\/\/.*\/(.+)\/(.+)\.git/;
                    return [4 /*yield*/, execa_1.default('git', ['rev-parse', 'HEAD'])];
                case 1:
                    url = (_g.sent()).stdout;
                    match = url.match(regex);
                    if (match) {
                        _a = __read(match, 3), _b = _a[1], owner = _b === void 0 ? process.env.OWNER : _b, _c = _a[2], repo = _c === void 0 ? process.env.REPO : _c;
                        return [2 /*return*/, { owner: owner, repo: repo }];
                    }
                    if ('slug' in env) {
                        _d = __read('slug' in env ? env.slug.split('/') : [], 2), _e = _d[0], owner = _e === void 0 ? process.env.OWNER || '' : _e, _f = _d[1], repo = _f === void 0 ? process.env.REPO || '' : _f;
                        return [2 /*return*/, { owner: owner, repo: repo }];
                    }
                    return [2 /*return*/, {
                            owner: process.env.OWNER,
                            repo: process.env.REPO,
                        }];
            }
        });
    });
}
function getApp(app, baseUrl) {
    return __awaiter(this, void 0, void 0, function () {
        var jwt, octokit;
        return __generator(this, function (_a) {
            jwt = app.getSignedJsonWebToken();
            octokit = new rest_1.Octokit({
                auth: jwt,
                baseUrl: baseUrl,
                previews: __spread(['antiope-preview'], custom_previews),
            });
            return [2 /*return*/, octokit.apps.getAuthenticated()];
        });
    });
}
function authenticateApp(app, baseUrl) {
    return __awaiter(this, void 0, void 0, function () {
        var jwt, appOctokit, _a, _b, owner, _c, repo, data, token;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    jwt = app.getSignedJsonWebToken();
                    appOctokit = new rest_1.Octokit({
                        auth: jwt,
                        baseUrl: baseUrl,
                        previews: __spread(['antiope-preview'], custom_previews),
                    });
                    return [4 /*yield*/, getRepositoryParameters()];
                case 1:
                    _a = _d.sent(), _b = _a.owner, owner = _b === void 0 ? '' : _b, _c = _a.repo, repo = _c === void 0 ? '' : _c;
                    return [4 /*yield*/, appOctokit.apps.getRepoInstallation({
                            owner: owner,
                            repo: repo,
                        })];
                case 2:
                    data = (_d.sent()).data;
                    return [4 /*yield*/, app.getInstallationAccessToken({
                            installationId: data.id,
                        })];
                case 3:
                    token = _d.sent();
                    return [2 /*return*/, new rest_1.Octokit({
                            auth: token,
                            baseUrl: baseUrl,
                            previews: __spread(['antiope-preview'], custom_previews),
                        })];
            }
        });
    });
}
/** Add a GitHub check with annotations to the HEAD sha */
function createCheck(_a) {
    var annotations = _a.annotations, errorCount = _a.errorCount, _b = _a.warningCount, warningCount = _b === void 0 ? 0 : _b, appId = _a.appId, privateKey = _a.privateKey, tool = _a.tool, name = _a.name, githubUrl = _a.githubUrl;
    return __awaiter(this, void 0, void 0, function () {
        var baseUrl, app, HEAD, appInfo, _c, err, octokit, summary, _d, first, rest, _e, _f, owner, _g, repo, check, run;
        var _this = this;
        return __generator(this, function (_h) {
            switch (_h.label) {
                case 0:
                    if (!isCi) {
                        return [2 /*return*/];
                    }
                    baseUrl = githubUrl ||
                        process.env.GH_API ||
                        process.env.GITHUB_URL ||
                        'https://api.github.com';
                    app = new app_1.App({
                        id: appId,
                        privateKey: privateKey,
                        baseUrl: baseUrl,
                    });
                    return [4 /*yield*/, execa_1.default('git', ['rev-parse', 'HEAD'])];
                case 1:
                    HEAD = (_h.sent()).stdout;
                    return [4 /*yield*/, getApp(app, baseUrl)];
                case 2:
                    appInfo = _h.sent();
                    return [4 /*yield*/, await_to_js_1.default(authenticateApp(app, baseUrl))];
                case 3:
                    _c = __read.apply(void 0, [_h.sent(), 2]), err = _c[0], octokit = _c[1];
                    if (err || !octokit) {
                        if ((err === null || err === void 0 ? void 0 : err.message) === 'Bad credentials') {
                            // eslint-disable-next-line no-console
                            console.log("It looks like you don't have the \"" + appInfo.data.name + "\" Github App installed to your repo! " + appInfo.data.html_url);
                            return [2 /*return*/];
                        }
                        throw err;
                    }
                    summary = (errorCount > 0 && 'Your project seems to have some errors.') ||
                        (warningCount > 0 && 'Your project seems to have some warnings.') ||
                        'Your project passed lint!';
                    _d = __read(lodash_chunk_1.default(annotations, 50)), first = _d[0], rest = _d.slice(1);
                    return [4 /*yield*/, getRepositoryParameters()];
                case 4:
                    _e = _h.sent(), _f = _e.owner, owner = _f === void 0 ? '' : _f, _g = _e.repo, repo = _g === void 0 ? '' : _g;
                    check = {
                        owner: owner,
                        repo: repo,
                        name: name,
                        completed_at: new Date().toISOString(),
                        head_sha: HEAD,
                        conclusion: (errorCount > 0 && 'failure') || 'success',
                        output: {
                            title: tool + " Results",
                            summary: summary,
                            annotations: first,
                        },
                    };
                    return [4 /*yield*/, octokit.checks.create(check).catch(function (error) { return __awaiter(_this, void 0, void 0, function () {
                            var PRE_HEAD;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        // eslint-disable-next-line no-console
                                        console.log('Failed to create check with error:', error);
                                        return [4 /*yield*/, execa_1.default('git', ['rev-parse', 'HEAD^1'])];
                                    case 1:
                                        PRE_HEAD = (_a.sent()).stdout;
                                        // Retrying against parent commit
                                        return [2 /*return*/, octokit.checks.create(__assign(__assign({}, check), { head_sha: PRE_HEAD }))];
                                }
                            });
                        }); })];
                case 5:
                    run = _h.sent();
                    return [4 /*yield*/, Promise.all(rest.map(function (group) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                return [2 /*return*/, octokit.checks.update({
                                        owner: owner,
                                        repo: repo,
                                        check_run_id: run.data.id,
                                        output: {
                                            title: tool + " Results",
                                            summary: summary,
                                            annotations: group,
                                        },
                                    })];
                            });
                        }); }))];
                case 6:
                    _h.sent();
                    return [2 /*return*/];
            }
        });
    });
}
exports.default = createCheck;
//# sourceMappingURL=index.js.map